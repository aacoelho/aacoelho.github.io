---
layout: post
tag: "post"
permalink: /:title
index: 4
title:  "Dei Guide"
type: "UX/UI Design + Development"
description: Creation of a proposal for the wayfinding system of the Department of Informatics Engineering at the University of Coimbra, Portugal. The system presented the teachers bureaus and the way to get there, the different services available inside the department and the path to every room of the building. This academic project was developed in group and consisted in finding the better solution to communicate precisely the information needed by the user in the less time possible. In this way, the approach followed was to associate each one of the main places to a different shape with a specific color and concentrate all the communication basis in these elementary shapes.
img: "deiguide_avatar.gif"
link: "http://deiguide.altervista.org/"
gallery:
  - img: "1_deiguide_shapes.png"
    caption: "Geometric shapes used to identify each place."
  - img: ""
    caption: ""
  - img: ""
    caption: ""
  - img: ""
    caption: ""
  - img: ""
    caption: ""
  - img: ""
    caption: ""
  - img: "7_deiguide_screen.png"
    caption: ""
details:
  tag: details
  title: Details
  item:
    - subtitle: Role
      text:
        - line: Concept Creation
        - line: Brand Creation
        - line: Illustrations
        - line: UX/UI Design
        - line: Dataset Construction
        - line: Development
    - subtitle: Technologies
      text:
        - line: Adobe Illustrator
        - line: HTML
        - line: CSS
        - line: Javascript
        - line: PHP
        - line: MySQL
        - line: AJAX

---
You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

To add new posts, simply add a file in the `_posts` directory that follows the convention `YYYY-MM-DD-name-of-post.ext` and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.

Jekyll also offers powerful support for code snippets:

{% highlight ruby %}
def print_hi(name)
  puts "Hi, #{name}"
end
print_hi('Tom')
#=> prints 'Hi, Tom' to STDOUT.
{% endhighlight %}

Check out the [Jekyll docs][jekyll-docs] for more info on how to get the most out of Jekyll. File all bugs/feature requests at [Jekyll’s GitHub repo][jekyll-gh]. If you have questions, you can ask them on [Jekyll Talk][jekyll-talk].

[jekyll-docs]: https://jekyllrb.com/docs/home
[jekyll-gh]:   https://github.com/jekyll/jekyll
[jekyll-talk]: https://talk.jekyllrb.com/
